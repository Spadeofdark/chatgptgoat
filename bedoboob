-- Final Safe GUI (By:@g4sser_) | Skipped Visual Percents + Balanced Timing

local function b64Decode(data)
	local b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
	data = string.gsub(data, '[^'..b..'=]', '')
	return (data:gsub('.', function(x)
		if (x == '=') then return '' end
		local r, f = '', (b:find(x) - 1)
		for i = 6, 1, -1 do r = r .. (f % 2 ^ i - f % 2 ^ (i - 1) > 0 and '1' or '0') end
		return r
	end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
		if (#x ~= 8) then return '' end
		local c = 0
		for i = 1, 8 do c = c + (x:sub(i, i) == '1' and 2 ^ (8 - i) or 0) end
		return string.char(c)
	end))
end

local url = b64Decode("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1NwYWRlb2ZkYXJrL2NoYXRncHRnb2F0L3JlZnMvYmVhZHMvbWFpbi9iZWRvYm9vYg==")

local function main()
	local Players = game:GetService("Players")
	local TweenService = game:GetService("TweenService")
	local UserInputService = game:GetService("UserInputService")
	local plr = Players.LocalPlayer
	local gui = plr:WaitForChild("PlayerGui")

	pcall(function()
		local old = gui:FindFirstChild("FullCoverLoading")
		if old then old:Destroy() end
	end)

	local scr = Instance.new("ScreenGui", gui)
	scr.Name = "FullCoverLoading"
	scr.IgnoreGuiInset = true
	scr.DisplayOrder = 999999

	local cov = Instance.new("Frame", scr)
	cov.Size = UDim2.new(1,0,1,0)
	cov.BackgroundColor3 = Color3.new(0,0,0)
	cov.BorderSizePixel = 0

	local logo = Instance.new("ImageLabel", cov)
	logo.Size = UDim2.new(0,240,0,240)
	logo.Position = UDim2.new(0.5, -120, 0.27, -120)
	logo.BackgroundTransparency = 1
	logo.Image = "rbxthumb://type=Asset&id=120170251278674&w=420&h=420"
	logo.ImageTransparency = 1
	task.spawn(function()
		for i=1,25 do
			logo.ImageTransparency = 1 - (i / 25)
			task.wait(0.03)
		end
	end)

	local loadingText = Instance.new("TextLabel", cov)
	loadingText.Size = UDim2.new(1,0,0.09,0)
	loadingText.Position = UDim2.new(0,0,0.47,0)
	loadingText.BackgroundTransparency = 1
	loadingText.TextColor3 = Color3.new(1,1,1)
	loadingText.TextStrokeTransparency = 0.5
	loadingText.Font = Enum.Font.GothamSemibold
	loadingText.TextScaled = true
	loadingText.Text = "Loading.. 0%"

	local subText = Instance.new("TextLabel", cov)
	subText.Size = UDim2.new(1,0,0.05,0)
	subText.Position = UDim2.new(0,0,0.575,0)
	subText.BackgroundTransparency = 1
	subText.TextColor3 = Color3.fromRGB(170,170,170)
	subText.Font = Enum.Font.Gotham
	subText.TextScaled = true
	subText.Text = "Bypassing anticheat..."

	local barBG = Instance.new("Frame", cov)
	barBG.Size = UDim2.new(0.8,0,0.015,0)
	barBG.Position = UDim2.new(0.1,0,0.7,0)
	barBG.BackgroundColor3 = Color3.fromRGB(40,40,40)
	barBG.BackgroundTransparency = 0.2
	Instance.new("UICorner", barBG).CornerRadius = UDim.new(0,8)

	local bar = Instance.new("Frame", barBG)
	bar.Size = UDim2.new(0,0,1,0)
	bar.BackgroundColor3 = Color3.new(1,1,1)
	Instance.new("UICorner", bar).CornerRadius = UDim.new(0,8)

	local function tweenTo(percent)
		bar:TweenSize(UDim2.new(percent/100,0,1,0), "Out", "Sine", 0.1, true)
		loadingText.Text = "Loading.. " .. math.floor(percent) .. "%"
	end

	local function generateTimings(totalTime, steps)
		local segments, total = {}, 0
		for i = 1, steps do
			local r = math.random(1, 100)
			table.insert(segments, r)
			total += r
		end
		for i = 1, #segments do
			segments[i] = (segments[i] / total) * totalTime
		end
		return segments
	end

	task.spawn(function()
		local switchAt = math.random(56, 99)
		local current = 1
		local visiblePercents = {}
		local timeMap = {}
		local totalTime = 180
		local steps = 0

		while current < switchAt do
			local skip = math.random(1, 5)
			if current + skip >= switchAt then break end
			table.insert(visiblePercents, current)
			table.insert(timeMap, skip)
			current += skip
			steps += 1
		end
		table.insert(visiblePercents, switchAt)
		table.insert(timeMap, 1)
		steps += 1

		local timeSegments = generateTimings(totalTime, steps)
		for i = 1, #visiblePercents do
			subText.Text = "Bypassing anticheat" .. string.rep(".", (i % 3) + 1)
			tweenTo(visiblePercents[i])
			task.wait(timeSegments[i])
		end

		subText.Text = "Loading GUI..."
		local guiSteps, guiTimings = {}, {}
		for i = switchAt + 1, 99 do table.insert(guiSteps, i) end
		guiTimings = generateTimings(180, #guiSteps)
		for i, percent in ipairs(guiSteps) do
			tweenTo(percent)
			task.wait(guiTimings[i])
		end

		loadingText.Text = "Done!"
		task.wait(1)
		subText.Text = "Finding an old server..."
		local finalTimings = generateTimings(420, 99)
		for i = 1, 99 do
			tweenTo(i)
			task.wait(finalTimings[i])
		end
	end)
end

-- ðŸ‘‡ Anti-theft wrapper calls main only if valid
pcall(function()
	local success, content = pcall(function()
		return game:HttpGet(url)
	end)
	if success and content and content:find("-- Final Safe GUI %(By:@g4sser_%)") then
		main()
	else
		return -- silent fail
	end
end)
